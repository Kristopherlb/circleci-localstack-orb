version: 2.1

description: "Reusable LocalStack integration for CircleCI"
display:
  home_url: "https://github.com/your-repo/circleci-localstack-orb"
  source_url: "https://github.com/your-repo/circleci-localstack-orb"

orbs:
  shellcheck: circleci/shellcheck@3.0

commands:
  setup:
    description: "Starts LocalStack with specified AWS services"
    parameters:
      services:
        type: string
        default: "s3,dynamodb,sqs"
        description: "Comma-separated list of AWS services to start"
      region:
        type: string
        default: "us-east-1"
        description: "AWS region for testing"

    steps:
      - run:
          name: "Start LocalStack"
          command: |
            docker run -d --rm --name localstack \
              -e SERVICES=<< parameters.services >> \
              -e DEFAULT_REGION=<< parameters.region >> \
              -p 4566:4566 \
              localstack/localstack

  teardown:
    description: "Stops and cleans up LocalStack"
    steps:
      - run:
          name: "Stop LocalStack"
          command: docker stop localstack || true

jobs:
  run-tests:
    description: "Runs tests against LocalStack"
    parameters:
      test_command:
        type: string
        default: "pytest tests/"
        description: "Command to run tests"
    steps:
      - setup
      - run:
          name: "Run Tests"
          command: << parameters.test_command >>
      - teardown

executors:
  default:
    description: "Docker executor with AWS CLI and LocalStack"
    docker:
      - image: cimg/python:3.9
        environment:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_DEFAULT_REGION: us-east-1
          LOCALSTACK_HOST: http://localhost:4566

parameters:
  context_name:
    type: string
    default: "default-context"  # Optional default value

workflows:
  version: 2
  test:
    jobs:
      - run-tests:
          context: << pipeline.parameters.context_name >>  # Use the parameter for context
          filters:
            branches:
              ignore:
                - main
            pull_requests:
              only:
                - test
